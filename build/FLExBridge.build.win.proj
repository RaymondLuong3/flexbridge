<Project xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
	<RootDir>$(teamcity_build_checkoutDir)</RootDir>
  </PropertyGroup>

  <UsingTask TaskName="StampAssemblies" AssemblyFile="$(RootDir)/lib/$(Configuration)/Palaso.BuildTasks.dll"/>
  <UsingTask TaskName="MakeWixForDirTree" AssemblyFile="$(RootDir)/lib/$(Configuration)/Palaso.BuildTasks.dll"/>
  <UsingTask TaskName="Split" AssemblyFile="$(RootDir)/lib/$(Configuration)/Palaso.BuildTasks.dll"/>
  <UsingTask TaskName="FileUpdate" AssemblyFile="$(RootDir)/lib/$(Configuration)/Palaso.BuildTasks.dll"/>
  <UsingTask TaskName="NUnitTeamCity" AssemblyFile="$(teamcity_dotnet_nunitlauncher_msbuild_task)"/>
  <!-- From http://msbuildtasks.tigris.org/ Has UnZip task -->
  <PropertyGroup>
	<MSBuildTasksTargets>..\packages\MSBuildTasks.1.5.0.235\tools\MSBuild.Community.Tasks.Targets</MSBuildTasksTargets>
  </PropertyGroup>
  <Import Project="$(MSBuildTasksTargets)" Condition="Exists('$(MSBuildTasksTargets)')"/>

  <!-- ***************** Main build ***************** -->
  <PropertyGroup>
	<Solution>FLExBridge.sln</Solution>
	<ApplicationName>FLEx Bridge</ApplicationName>
	<SolutionPath>$(RootDir)/$(Solution)</SolutionPath>
  </PropertyGroup>

  <Import Project="$(RootDir)/build/build.common.proj"/>

  <Target Name="CreateDirectories">
	<MakeDir Directories="$(RootDir)/output/"/>
	<MakeDir Directories="$(RootDir)/output/Common"/>
	<MakeDir Directories="$(RootDir)/output/$(Configuration)/"/>
	<MakeDir Directories="$(RootDir)/output/Installer/"/>
  </Target>

  <ItemGroup>
	<ExistingObjectFiles Include="$(RootDir)/**/obj/**/*;$(RootDir)/output/**/*" Exclude="$(RootDir)/.hg/**/*"/>
  </ItemGroup>
  <ItemGroup>
	<OutputDirectory Include="$(RootDir)\output\"/>
  </ItemGroup>
  <Target Name="Clean">
	<Message Text="Starting Clean"/>
	<Delete Files="@(ExistingObjectFiles)"/>
	<RemoveDir Directories="$(OutputDirectory)"/>
	<Message Text="End Clean"/>
  </Target>

  <Target Name="Build">
	<CallTarget Targets="Clean"/>
	<CallTarget Targets="CreateDirectories"/>
	<CallTarget Targets="SetAssemblyVersion"/>
	<CallTarget Targets="UnzipMercurial"/>
	<CallTarget Targets="Compile"/>
	<Message Text="Build Complete"/>
  </Target>

  <!-- It is necessary to restore NuGet packages before using the script so that the UnZip command can work. This can be done
		from the build folder on the command line with a command like: msbuild FLExBridge.build.win.proj /t:RestorePackages 
		/p:RootDir=.. /p:teamcity_dotnet_nunitlauncher_msbuild_task=none -->
  <Target Name="UnzipMercurial" DependsOnTargets="RestorePackages">
	<!-- Extract a zip file-->
	<MSBuild.Community.Tasks.Unzip ZipFileName="$(RootDir)\lib\Debug\Mercurial.zip" TargetDirectory="$(RootDir)"/>
  </Target>

  <Target Name="Compile" DependsOnTargets="RestorePackages">
	<MSBuild Projects="$(RootDir)/$(Solution)" Targets="Build" Properties="Configuration=$(Configuration);Platform=Any CPU"/>
  </Target>

  <!-- ***************** Testing ***************** -->

  <Target Name="Test" DependsOnTargets="Build">
	<ItemGroup>
	  <TestAssemblies Include="$(RootDir)/output/$(Configuration)/*Tests.dll;" Exclude="**\obj\**"/>
	</ItemGroup>
	<NUnitTeamCity Assemblies="@(TestAssemblies)" ExcludeCategory="SkipOnTeamCity"/>
  </Target>

  <!-- *********************** Installer stuff below.  ******************************* -->

  <!-- For building an an installer on TC -->
  <Target Name="Installer" DependsOnTargets="DevelopInstaller; Test"/>

  <!-- For use when working on installer development -->
  <!-- To build the installer from the build folder to build on a developer machine use something similar to the following: -->
  <!-- msbuild FLExBridge.build.win.proj /t:DevelopInstaller /p:Version=2.4.0 /p:BUILD_VCS_NUMBER=24445 /p:RootDir=.. /p:teamcity_dotnet_nunitlauncher_msbuild_task=none /p:Configuration=Release /p:Platform="Any CPU" -->
  <!-- If no Version is specified, reads from "$(RootDir)/version". -->
  <Target Name="DevelopInstaller" DependsOnTargets="VersionNumbers; CreateDirectories; Build">
	<Copy SourceFiles="$(RootDir)\src\Installer\Installer.wxs" DestinationFolder="$(RootDir)\output\Installer"/>
	<FileUpdate File="$(RootDir)\src\Installer\Installer.wxs" Regex="Property_ProductVersion = &quot;.*&quot;" ReplacementText="Property_ProductVersion = &quot;$(Version)&quot;"/>

	<Message Text="Making Installer Version: $(Version)" Importance="high"/>
	<MSBuild Projects="$(RootDir)\src\Installer\Installer.wixproj"/>

	<!-- Copy Installer.wxs back so it appears we aren't modifying the original, which then is a pain on dev machines -->
	<Copy SourceFiles="$(RootDir)\output\Installer\Installer.wxs" DestinationFolder="$(RootDir)\src\Installer"/>
  </Target>
</Project>
